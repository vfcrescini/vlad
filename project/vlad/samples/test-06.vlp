/*
 * Test Runs
 * Vino Fernando Crescini  <jcrescin@scm.uws.edu.au>
 */

/* entity declarations */

entity sub alice;
entity sub-grp grp1, grp2, grp3;
entity acc read, write;
entity obj file;

entity obj objs001, objs002, objs003, objs004, objs005, objs006, objs007, objs008, objs009, objs010;
entity obj objs011, objs012, objs013, objs014, objs015, objs016, objs017, objs018, objs019, objs020;
entity obj-grp objg001, objg002, objg003, objg004, objg005, objg006, objg007, objg008, objg009, objg010;
entity obj-grp objg011, objg012, objg013, objg014, objg015, objg016, objg017, objg018, objg019, objg020;

/* interval declarations */

interval work_hours [0900, 1700];
interval morning_hours;
interval afternoon_hours;

/* initial fact statement */

initially
  memb(alice, grp2, work_hours) &&
  subst(grp2, grp1, morning_hours) &&
  holds(grp1, read, file, work_hours);

/* interval constraints */

relation
  during(morning_hours, work_hours),
  starts(morning_hours, work_hours);

relation
  during(afternoon_hours, work_hours),
  finishes(afternoon_hours, work_hours);

relation
  before(morning_hours, afternoon_hours);

/* authorisation constraint */

always holds(grp1, write, file, I0)
  implied by
    holds(grp1, read, file, I0)
  with absence
    !holds(grp3, write, file, I0);

always memb(objs001, objg001, work_hours);
always memb(objs001, objg002, work_hours);
always memb(objs001, objg003, work_hours);
always memb(objs001, objg004, work_hours);
always memb(objs001, objg005, work_hours);
always memb(objs001, objg006, work_hours);
always memb(objs001, objg007, work_hours);
always memb(objs001, objg008, work_hours);
always memb(objs001, objg009, work_hours);
always memb(objs001, objg010, work_hours);
always memb(objs002, objg001, work_hours);
always memb(objs002, objg002, work_hours);
always memb(objs002, objg003, work_hours);
always memb(objs002, objg004, work_hours);
always memb(objs002, objg005, work_hours);
always memb(objs002, objg006, work_hours);
always memb(objs002, objg007, work_hours);
always memb(objs002, objg008, work_hours);
always memb(objs002, objg009, work_hours);
always memb(objs002, objg010, work_hours);
always memb(objs003, objg001, work_hours);
always memb(objs003, objg002, work_hours);
always memb(objs003, objg003, work_hours);
always memb(objs003, objg004, work_hours);
always memb(objs003, objg005, work_hours);
always memb(objs003, objg006, work_hours);
always memb(objs003, objg007, work_hours);
always memb(objs003, objg008, work_hours);
always memb(objs003, objg009, work_hours);
always memb(objs003, objg010, work_hours);
always memb(objs004, objg001, work_hours);
always memb(objs004, objg002, work_hours);
always memb(objs004, objg003, work_hours);
always memb(objs004, objg004, work_hours);
always memb(objs004, objg005, work_hours);
always memb(objs004, objg006, work_hours);
always memb(objs004, objg007, work_hours);
always memb(objs004, objg008, work_hours);
always memb(objs004, objg009, work_hours);
always memb(objs004, objg010, work_hours);
always memb(objs005, objg001, work_hours);
always memb(objs005, objg002, work_hours);
always memb(objs005, objg003, work_hours);
always memb(objs005, objg004, work_hours);
always memb(objs005, objg005, work_hours);
always memb(objs005, objg006, work_hours);
always memb(objs005, objg007, work_hours);
always memb(objs005, objg008, work_hours);
always memb(objs005, objg009, work_hours);
always memb(objs005, objg010, work_hours);
always memb(objs006, objg001, work_hours);
always memb(objs006, objg002, work_hours);
always memb(objs006, objg003, work_hours);
always memb(objs006, objg004, work_hours);
always memb(objs006, objg005, work_hours);
always memb(objs006, objg006, work_hours);
always memb(objs006, objg007, work_hours);
always memb(objs006, objg008, work_hours);
always memb(objs006, objg009, work_hours);
always memb(objs006, objg010, work_hours);
always memb(objs007, objg001, work_hours);
always memb(objs007, objg002, work_hours);
always memb(objs007, objg003, work_hours);
always memb(objs007, objg004, work_hours);
always memb(objs007, objg005, work_hours);
always memb(objs007, objg006, work_hours);
always memb(objs007, objg007, work_hours);
always memb(objs007, objg008, work_hours);
always memb(objs007, objg009, work_hours);
always memb(objs007, objg010, work_hours);
always memb(objs008, objg001, work_hours);
always memb(objs008, objg002, work_hours);
always memb(objs008, objg003, work_hours);
always memb(objs008, objg004, work_hours);
always memb(objs008, objg005, work_hours);
always memb(objs008, objg006, work_hours);
always memb(objs008, objg007, work_hours);
always memb(objs008, objg008, work_hours);
always memb(objs008, objg009, work_hours);
always memb(objs008, objg010, work_hours);
always memb(objs009, objg001, work_hours);
always memb(objs009, objg002, work_hours);
always memb(objs009, objg003, work_hours);
always memb(objs009, objg004, work_hours);
always memb(objs009, objg005, work_hours);
always memb(objs009, objg006, work_hours);
always memb(objs009, objg007, work_hours);
always memb(objs009, objg008, work_hours);
always memb(objs009, objg009, work_hours);
always memb(objs009, objg010, work_hours);
always memb(objs010, objg001, work_hours);
always memb(objs010, objg002, work_hours);
always memb(objs010, objg003, work_hours);
always memb(objs010, objg004, work_hours);
always memb(objs010, objg005, work_hours);
always memb(objs010, objg006, work_hours);
always memb(objs010, objg007, work_hours);
always memb(objs010, objg008, work_hours);
always memb(objs010, objg009, work_hours);
always memb(objs010, objg010, work_hours);

/* policy update declaration */

delete_read(SG0, OS0)
  causes
    !holds(SG0, read, OS0, I0)
  where
    starts(work_hours, I0),
    during(work_hours, I0);
