# Vino Crescini <jcrescin@cit.uws.edu.au>

TOPSRCDIR = @top_srcdir@
DISTDIR = @DISTDIR@
CURDIR = main
CC = @CC@
CXX = @CXX@
LEX = @LEX@
YACC = @YACC@
CFLAGS = @CFLAGS@
CXXFLAGS = @CXXFLAGS@
LDFLAGS = @LDFLAGS@
LN_S = @LN_S@
DEBUG = @DEBUG@
STRIP = @STRIP@
BUILDSHARED = @BUILDSHARED@
SMODELS = @SMODELS@
WRAPPER = @WRAPPER@
STATIC = @STATIC@
VERSION = @VERSION@
BINS = vlad
STATIC_LIBS =
SHARED_LIBS =
INCLUDES =
OBJECTS =             \
  vlad.o              \
  program_parser.o    \
  program_scanner.o   \
  operation_parser.o  \
  operation_scanner.o \
  $(NULL)

TEMPS1 =              \
  lex.*.cpp           \
  *.tab.cpp           \
  *.tab.h             \
  $(NULL)
TEMPS2 =

ifdef SMODELS
SMLIBS = -lsmodels
endif

prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = @bindir@
libdir = @libdir@
includedir = @includedir@

include $(TOPSRCDIR)/rules.mk

vlad : $(OBJECTS)
ifdef STATIC
	$(CXX) $(LDFLAGS) -static -o $(@) $(OBJECTS) -lvlad $(SMLIBS)
else
	$(CXX) $(LDFLAGS) -o $(@) $(OBJECTS) -lvlad $(SMLIBS)
endif
ifndef DEBUG
  ifdef STRIP
	strip $(@)
  endif
endif

vlad.o : parser.h vlad.cpp
	$(CXX) $(CXXFLAGS) -o $(@) -c vlad.cpp

operation_scanner.o : operation.tab.h lex.operation.cpp
	$(CXX) $(CXXFLAGS) -o $(@) -c lex.operation.cpp

operation_parser.o : operation.tab.h operation.tab.cpp
	$(CXX) $(CXXFLAGS) -o $(@) -c operation.tab.cpp

program_scanner.o : program.tab.h lex.program.cpp
	$(CXX) $(CXXFLAGS) -o $(@) -c lex.program.cpp

program_parser.o : program.tab.h program.tab.cpp
	$(CXX) $(CXXFLAGS) -o $(@) -c program.tab.cpp

lex.operation.cpp : operation.l
	$(LEX) -Poperation operation.l && mv -f lex.operation.c $(@)

lex.program.cpp : program.l
	$(LEX) -Pprogram program.l && mv -f lex.program.c $(@)

operation.tab.cpp : operation.y
	$(YACC) -b operation -p operation operation.y && mv -f operation.tab.c $(@)

operation.tab.h : operation.y
	$(YACC) -b operation -p operation -d operation.y

program.tab.cpp : program.y
	$(YACC) -b program -p program program.y && mv -f program.tab.c $(@)

program.tab.h : program.y
	$(YACC) -b program -p program -d program.y
