# Vino Crescini <jcrescin@cit.uws.edu.au>

TOPSRCDIR = @top_srcdir@
DISTDIR = @DISTDIR@
CURDIR = lib
CC = @CC@
CXX = @CXX@
LEX = @LEX@
YACC = @YACC@
CFLAGS = @CFLAGS@
CXXFLAGS = @CXXFLAGS@
LN_S = @LN_S@
SMODELS = @SMODELS@

ifdef SMODELS
SMINCLUDES = wrapper.h
SMOBJECTS = wrapper.o
endif

BINS =
LIBS = libvlad.a
INCLUDES = vlad.h list.h stringlist.h numberlist.h atom.h expression.h seqtab.h symtab.h consttab.h transtab.h $(SMINCLUDES) kb.h parser.h
OBJECTS = list.o stringlist.o numberlist.o atom.o expression.o seqtab.o symtab.o consttab.o transtab.o $(SMOBJECTS) kb.o program_parser.o program_scanner.o operation_parser.o operation_scanner.o
TEMPS = lex.*.cpp *.tab.cpp *.tab.h

include $(TOPSRCDIR)/rules.mk

libvlad.a : $(OBJECTS)
	$(AR) -rcs $(@) $(OBJECTS)

list.o : list.h list.cpp
	$(CXX) $(CXXFLAGS) -o $(@) -c list.cpp

stringlist.o : stringlist.h stringlist.cpp list.o
	$(CXX) $(CXXFLAGS) -o $(@) -c stringlist.cpp

numberlist.o : numberlist.h numberlist.cpp list.o
	$(CXX) $(CXXFLAGS) -o $(@) -c numberlist.cpp

atom.o : atom.h atom.cpp
	$(CXX) $(CXXFLAGS) -o $(@) -c atom.cpp

expression.o : list.o atom.o expression.h expression.cpp
	$(CXX) $(CXXFLAGS) -o $(@) -c expression.cpp

symtab.o : stringlist.o symtab.h symtab.cpp
	$(CXX) $(CXXFLAGS) -o $(@) -c symtab.cpp

consttab.o : expression.o consttab.h consttab.cpp
	$(CXX) $(CXXFLAGS) -o $(@) -c consttab.cpp

transtab.o : stringlist.o expression.o transtab.h transtab.cpp
	$(CXX) $(CXXFLAGS) -o $(@) -c transtab.cpp

seqtab.o : stringlist.o expression.o seqtab.h seqtab.cpp
	$(CXX) $(CXXFLAGS) -o $(@) -c seqtab.cpp

ifdef SMODELS
wrapper.o : wrapper.h wrapper.cpp
	$(CXX) $(CXXFLAGS) -o $(@) -c wrapper.cpp
endif

kb.o : expression.o symtab.o consttab.o transtab.o $(SM_OBJECTS) kb.h kb.cpp
	$(CXX) $(CXXFLAGS) -o $(@) -c kb.cpp

operation_scanner.o : operation.tab.h lex.operation.cpp
	$(CXX) $(CXXFLAGS) -o $(@) -c lex.operation.cpp

operation_parser.o : operation.tab.h operation.tab.cpp
	$(CXX) $(CXXFLAGS) -o $(@) -c operation.tab.cpp

program_scanner.o : program.tab.h lex.program.cpp
	$(CXX) $(CXXFLAGS) -o $(@) -c lex.program.cpp

program_parser.o : program.tab.h program.tab.cpp
	$(CXX) $(CXXFLAGS) -o $(@) -c program.tab.cpp

lex.operation.cpp : operation.l
	$(LEX) -Poperation operation.l && mv -f lex.operation.c $(@)

lex.program.cpp : program.l
	$(LEX) -Pprogram program.l && mv -f lex.program.c $(@)

operation.tab.cpp : operation.y
	$(YACC) -b operation -p operation operation.y && mv -f operation.tab.c $(@)

operation.tab.h : operation.y
	$(YACC) -b operation -p operation -d operation.y

program.tab.cpp : program.y
	$(YACC) -b program -p program program.y && mv -f program.tab.c $(@)

program.tab.h : program.y
	$(YACC) -b program -p program -d program.y
