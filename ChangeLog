2003-12-31  Vino Fernando Crescini  <jcrescin@cit.uws.edu.au>

	* lib/list.cpp :
	* lib/list.h :

	  - Cleanup.

	* lib/Makefile.in :
	* lib/fact.cpp :
	* lib/fact.h :

	  - Renamed atoms to facts.


2003-12-30  Vino Fernando Crescini  <jcrescin@cit.uws.edu.au>

	* lib/symtab.cpp :
	* lib/symtab.h :
	* lib/vlad.h :

	  - Cleanups.

	* lib/Makefile.in :
	* lib/polbase.cpp :
	* lib/polbase.h :
 
	  - Added a policy base class. intended as a rewrite of the kb class.

2003-12-12  Vino Fernando Crescini  <jcrescin@cit.uws.edu.au>

	* lib/symtab.cpp :
	* lib/symtab.h :
	* lib/vlad.h :

	  - Simplified class by defining an array of stringlists instead
	    of separately managing 6 individual stringlists.

	  - Identifier types now made separate from each other.

2003-12-07  Vino Fernando Crescini  <jcrescin@cit.uws.edu.au>

	* Makefile.in :
	* rules.mk :
	* lib/Makefile.in : 
	* main/Makefile.in :

	  - Overhauled build system.

2003-08-27  Vino Fernando Crescini  <jcrescin@cit.uws.edu.au>

	* rules.mk :

	  - Removed -Wnested-externs as some compilers do not accept such
	    option.

2003-08-22  Vino Fernando Crescini  <jcrescin@cit.uws.edu.au>

	* lib/kb.cpp :

	  - Fixed kb::verify_transref() so that it will check whether the
	    "de-variable-ized" expressions are valid. This is a fix to prevent
	    invalid sequence additions.

2003-07-25  Vino Fernando Crescini  <jcrescin@cit.uws.edu.au>

	* lib/kb.cpp :

	  - now query_generate() and compute_generate() will work anytime
	    after kb is closed.

	* lib/kb.cpp :
	* lib/kb.h :
	* lib/smwrap.cpp :
	* lib/smwrap.h :

	  - Changed the way atoms are queried against the stable models.
	    Previously, each atom in an expression is checked against every
	    single model until we find a false atom or check all the models.
	    Now, models are generated under the assertion that the atom we
	    are checking is NOT in the model. So if no model is generated,
	    we can conclude that the atom is consistently in all models and is
	    therefore true. If at least one model is found, we conclude that
	    the atom is inconsistent so it is false.

2003-07-16  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* lib/kb.cpp :
	* lib/kb.h :

	  - Added static negate_atom() function.

	  - Make compute_atom() static.

	* lib/smwrap.cpp :
	* lib/smwrap.h :

	  - Fix so that the smwrap::ask() will now try to evaluate atoms
	    consistently in one model at a time. Previously, it was possible
	    for atoms of one expression to be evaluated in different models.

2003-07-08  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* lib/kb.cpp :
	* lib/kb.h :
	* lib/wrapper.cpp :
	* lib/wrapper.h :

	  - Added symtab_get_array().

	* lib/wrapper.cpp :
	* lib/wrapper.h :

	  - Added strlist_get().

2003-06-25  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* lib/kb.cpp :
	* lib/kb.h :
	* lib/symtab.cpp :
	* lib/symtab.h :
	* lib/wrapper.cpp :
	* lib/wrapper.h :

	  - Added functions to retrieve symtab identifiers.

	* lib/kb.cpp :
	* lib/kb.h :
	* lib/transtab.cpp :
	* lib/transtab.h :
	* lib/wrapper.cpp :
	* lib/wrapper.h :

	  - Added a get() and length() function wrappers for seqtab and
	    transtab.

	* lib/kb.cpp :
	* lib/kb.h :
	* lib/symtab.cpp :
	* lib/symtab.h :
	* lib/wrapper.cpp :

	  - Added a kb_check_symtab() to see if an identifier is in the symbol
	    table.

2003-06-20  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* lib/kb.h :
	* lib/wrapper.cpp :
	* lib/wrapper.h :

	  - Changes to prevent smodels-dependent features from compiling and
	    being used by external apps if not compiled with smodels support.

	* Makefile.in :
	* configure :
	* configure.ac :
	* rules.mk :
	* lib/Makefile.in :
	* lib/atom.cpp :
	* lib/atom.h :
	* lib/consttab.cpp :
	* lib/expression.cpp :
	* lib/expression.h :
	* lib/kb.cpp :
	* lib/kb.h :
	* lib/list.cpp :
	* lib/numberlist.cpp :
	* lib/seqtab.cpp :
	* lib/seqtab.h :
	* lib/smwrap.cpp :
	* lib/stringlist.cpp :
	* lib/stringlist.h :
	* lib/symtab.cpp :
	* lib/transtab.cpp :
	* lib/vlad.h :
	* lib/wrapper.cpp :
	* lib/wrapper.h :
	* main/Makefile.in :
	* main/operation.l :
	* main/operation.y :
	* main/program.l :
	* main/program.y :
	* main/vlad.cpp :
	* lib/config.h.in :
	* config.h.in :

	  - Build system fixup.

	  - config.h is now in the lib directory to allow it to be included in
	    the installation.

2003-06-18  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* lib/wrapper.h :
	* lib/wrapper.cpp :

	   - Prefixed each function with vlad_ to avoid namespace pollution
	     of linked apps.

2003-06-17  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* lib/wrapper.h :
	* lib/wrapper.cpp :

	  - Cleanup.

	  - Fixed the ifdef for smodels dependent function: will now return 
	    failure if used without smodels support.

2003-06-13  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* lib/atom.h :
	* lib/symtab.h :
	* lib/vlad.h :

	  - Moved macros to vlad.h to allow non-c++ programs to use them.

2003-06-10  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* lib/Makefile.in :
	* lib/wrapper.cpp :
	* lib/wrapper.h :

	  - Added C interface for kb.

2003-06-09  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* config.h.in :
	* configure :
	* configure.ac :

	  - Added --enable-wrapper to enable the c-style library wrapper.

	  - Added additional compiler warning checks.

	* lib/wrapper.h :
	* lib/wrapper.cpp :
	* lib/smwrap.h :
	* lib/smwrap.cpp :

	  - Renamed wrapper to smwrap.

2003-06-03  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* configure.ac :
	* lib/Makefile.in :

	  - Added a check for -fpic in case -fPIC fails.

	* lib/kb.cpp :
	* lib/kb.h :
	* main/operation.y :

	  - Separated compute() into compute_generate() and
	    compute_evaluate() also generate_nlp() and evaluate_nlp() to
	    query_generate() and query_evaluate(). This change is made to
	    allow multiple queries of the same transformation sequence to
	    share the same kb state.


2003-06-02  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* lib/kb.cpp :
	* lib/vlad.h :

	  - Now generate_nlp() outputs the queries too.

	* docs/bnf_operations.txt :
	* docs/langspecs.txt :
	* main/operation.l :
	* main/operation.y :
	* samples/cwall_operations :

	  - Added a "compute" statement into the operations language to
	    separate computation from query evaluation.

	* lib/kb.cpp :

	  - Changed inheritance rules from :

	      holds(Se, A, O) <- holds(Sg, A, O) AND memb(Se, Sg)
              holds(S, Ae, O) <- holds(S, Ag, O) AND memb(Ae, Ag)
              holds(S, A, Oe) <- holds(S, A, Og) AND memb(Oe, Og)

	    to :

	      holds(Se, A, O) <- holds(Sg, A, O) AND memb(Se, Sg) AND NOT
	      !holds(Se, A, O)

              holds(S, Ae, O) <- holds(S, Ag, O) AND memb(Ae, Ag) AND NOT
	      !holds(S, Ae, O)

              holds(S, A, Oe) <- holds(S, A, Og) AND memb(Oe, Og) AND NOT
	      !holds(S, A, Oe)

	    This addition allows group members to override group properties.
	    note that the negative properties cannot be overridden.


2003-05-29  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* lib/kb.cpp :
	* lib/kb.h :

	  - Changes (including api) to allow apps to trigger computation
	    before queries.

	  - Took out useless condition to close inittab, transtab and
	    consttab. Now a more general close_kb() is used.

	* main/operation.y :
	* main/program.y :

	  - Fixes to reflect above changes. Still computes models on the fly
	    at every query.

	* lib/wrapper.cpp :

	  - ask() now checks all possible models.

2003-05-28  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* main/vlad.cpp :
	* lib/Makefile.in :
	* main/Makefile :
	* main/operation.l :
	* main/operation.y :
	* main/parser.h :
	* main/program.l :
	* main/program.y :
	* lib/operation.l :
	* lib/operation.y :
	* lib/parser.h :
	* lib/program.l :
	* lib/program.y :

	  - Now parser is not part of the library. Moved parser and scanner
	    into main directory.

2003-05-14  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* Makefile.in :
	* rules.mk :
	* lib/Makefile.in :
	* main/Makefile.in :

	  - Added install and uninstall rules.

2003-05-13  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* rules.mk :
	* lib/Makefile.in :

	  - Linked libsmodels.so to libvlad.so.

	  - Changed parameter expansions (${var%%pattern}) into a cut command.
	    This should keep non-posix compiant shells happy.

	* configure.ac :

	  - Added checks for compiler -fPIC and -shared options.

	  - Added an --enable-static option to link the executable statically.

	* rules.mk :
	* lib/Makefile.in :
	* main/Makefile.in :

	  - Renamed phony rules: took out the "copy-" prefix.

	  - Now creates a shared library (where supported) libvlad.so.

	  - By default, the executable will be linked againts the shared lib,
	    unless --enable-static is specified, in which case, it will be
	    linked against the static lib.

2003-05-11  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* configure :
	* configure.ac :
	* rules.mk :
	* lib/Makefile.in :
	* main/Makefile.in :

	  - Library moved from dist/lib/vlad to dist/lib.

	  - Cleanup.

	* Makefile.in :
	* configure :
	* configure.ac :
	* main/Makefile.in :
	* common/* :
	* kb/* :
	* parser/* :

	  - Moved all sources to the new lib directory to combine all
	    objects into one library libvlad.

2003-05-06  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* common/Makefile.in :
	* kb/Makefile.in :
	* main/Makefile.in :
	* parser/Makefile.in :

	  - Now package will build on systems without ln -s or even ln.

	  - Now includes rules.mk.

	* rules.mk :

	  - Added a global rules file to centralise makefile rules.

2003-05-05  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* kb/sequence.cpp :
	* kb/sequence.h :
	* kb/seqtab.cpp :
	* kb/seqtab.h :
	* kb/Makefile.in :

	  - Renamed sequence to seqtab.

	  - Added a delete function.

	* kb/kb.cpp :
	* kb/kb.h :

	  - Sequence table is now global to any query.

	  - Added add, delete and list functions for sequence table.

	* main/vlad.cpp :
	* parser/Makefile.in :
	* parser/parser.h :
	* parser/query.l :
	* parser/query.y :
	* parser/operation.l :
	* parser/operation.y :

	  - Renamed query to operation because the parser/scanner is no longer
	    restricted to queries.

2003-05-02  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* main/vlad.cpp :
	* parser/parser.h :
	* parser/program.l :
	* parser/program.y :
	* parser/query.l :
	* parser/query.y :

	  - Some cleanup so we do not propagate the external references from
	    the code generated by bison and flex.

2003-05-01  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* parser/program.y :
	* parser/query.y :

	  - Now error messages are somewhat more descriptive.

	* common/vlad.h :
	* kb/kb.cpp :
	* kb/wrapper.cpp :

	  - Added an invalid op error code.

	* main/Makefile.in :

	  - We no longer need to link against libfl.

2003-04-29  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* docs/bnf.txt :
	* docs/bnf_program.txt :
	* docs/bnd_query.txt :

	  - Again separated program from query.

	* samples/chinese_wall :
	* samples/cwall_prog :
	* samples/cwall_query :

	  - Replaced chinese wall example with two that has the program part
	    separated from the query part.

	* common/vlad.h	:

	  - Added error code for the case where files cannot be opened for
	    reading.

	* main/vlad.cpp :

	  - Modified code to allow input from 2 files instead of one.

	* parser/Makefile.in :
	* parser/parser.h :
	* parser/program.y :
	* parser/program.l :
	* parser/query.y :
	* parser/query.l :

	  - Separated parser.y and scanner.l into program.{y,l} and query.{y,l}
	    to separate the program part from the queries.

	  - What used to go to yyout and yyerr now goes to stdout and stderr,
	    respectively.

2003-04-24  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* docs/bnf.txt :
	* docs/langspecs.txt :
	* parser/parser.y :
	* parser/scanner.l :

	  - Changed the syntax for constraints to allow us to enter a negative
	    condition (negation as failure) even without a positive one. This
	    change allows us to simplify both the syntax and to a lesser
	    extent, the parser.

	    Old syntax:

	      <exp1> implies <exp2> [with absence <exp3>]
	      always <exp2>

	    New syntax:

	      always <exp1> [implied by <exp2>] [with absence <exp3>]

2003-04-23  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* kb/wrapper.h :
	* kb/wrapper.cpp :
	* kb/kb.cpp :

	  - Refined the wrapper api by using stdarg. This eliminates the need
	    to use the numlist in almost all cases.

	  - Cleanup.

2003-04-22  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* common/vlad.h :

	  - Added new error code: no model.

	* kb/kb.cpp :

	  - Added a few compute_*() functions for simplification.

	  - Added identity rules (ie. each set is a subset of itself).

	  - Added an extension to the inheritance rules (for subsets) where
	    a set inherits all the properties of its superset.

	  - Query now works properly.

	  - Fixed bug with the generation of some rules.

	* kb/wrapper.cpp :
	* kb/wrapper.h :

	  - added ask() function.

	* kb/kb.cpp :
	* kb/wrapper.cpp :
	* kb/wrapper.h :

	  - Added debug code.

	  - Replaced the redundant add_rule_*() functions with add_rule() and
	    add_axiom().

	  - Stopped using CHOICERULE as they encourage the result of more than
	    one stable model. Multiple heads are now just repeated:

	    a, b, c :- x, y, z.

	    is now

	    a :- x, y, z.
	    b :- x, y, z.
	    c :- x, y, z.

2003-04-17  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* kb/kb.cpp :

	  - Added all rules in evaluate_query().

	* kb/wrapper.cpp :
	* kb/wrapper.h :

	  - Added checks to ensure that empty tails have the constant true.

	  - Added stages to ensure that functions are called in the right
	    order.

	  - Enumerated all possible combinations of the different formats
	    of add_rule().

	* common/numberlist.h :
	* common/numberlist.cpp :

	  - Removed numberlistlist.

	  - Added purge() function.

	* common/vlad.h :
	* main/vlad.cpp :
	* parser/parser.y :

	  - Changed modes to GENERATE and EVALUATE.

	  - Also changed the command line flag from -s to -e (from smodels to
	    evaluate).

	* common/list.h :

	  - Added a length macro that returns the length of the list ptr, 0
	    if pointer is NULL.

	* common/vlad.h :

	  - Added string constants to centralise symbols.

	  - Added numeric lengths for string constants.

	  - Added conversion macros to convert int/bool to its boolean string
	    eqivalent.

	* kb/kb.cpp :

	  - Added inheritance rules code.

	* kb/wrapper.cpp :
	* kb/wrapper.h :

	  - Cleanup.

	  - Added functions to register rules of different formats.

2003-04-16  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* kb/kb.cpp :
	* kb/wrapper.cpp :
	* kb/wrapper.h :

	  - Now atoms are registered in smodels.

	* common/vlad.h :

	  - Added a result macro to convert numeric codes to string.

	* kb/kb.cpp :
	* kb/kb.h :
	* parser/parser.y :

	  - Added a skeletal evaluate_query() function that calls on smodels.

	* common/vlad.h :
	* main/vlad.cpp :
	* parser/parser.h :
	* parser/parser.y :

	  - Moved yyerror() and yywarn() back to parser.y where it makes more
	    sense.

	  - Added modes: NLP and SMODELS. One generates a normal logic program
	    and the other links with the smodels library to evaluate a query.

	* common/Makefile.in :
	* main/Makefile.in :
	* parser/Makefile.in :

	  - Added OBJECTS variable.

	  - Now vlad is linked against smodels (if configured with
	    --with-smodels).

	* kb/wrapper.h :
	* kb/wrapper.cpp :

	  - Added smodels wrapper class.

	* configure :
	* configure.ac :

	  - Fixed relative/absolute path problem with --with-smodels.

	  - Smodels path now included in C/CXXFLAGS and LDFLAGS.

2003-04-15  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* README :

	  - Updated readme.

	* configure :
	* configure.ac :

	  - Fixed smodels checking mechanism.

2003-04-14  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* configure :
	* configure.ac :
	* common/Makefile.in :
	* common/list.cpp :
	* common/numberlist.cpp :
	* common/numberlist.h :
	* common/stringlist.cpp :
	* common/stringlist.h :
	* kb/Makefile.in :
	* kb/atom.cpp :
	* kb/atom.h :
	* kb/consttab.cpp :
	* kb/consttab.h :
	* kb/expression.cpp :
	* kb/expression.h :
	* kb/kb.cpp :
	* kb/kb.h :
	* kb/sequence.cpp :
	* kb/sequence.h :
	* kb/symtab.cpp :
	* kb/symtab.h :
	* kb/transtab.cpp :
	* kb/transtab.h :
	* main/Makefile.in :
	* main/vlad.cpp :
	* parser/Makefile.in :
	* parser/parser.y :
	* parser/scanner.l :

	  - Changed include statements to have the prefix vlad/* to prevent
	    inclusion of other header files of the same name.

	* Makefile.in :
	* configure :
	* configure.ac :
	* common/Makefile.in :
	* kb/Makefile.in :
	* main/Makefile.in :
	* parser/Makefile.in :

	  - Cleanup of build system. Files are now symlinked in the dist
	    directory.

	* configure.ac :
	* configure :

	  - Now accepts --with-smodels-src.

	  - Now allows users to override CFLAGS, CXXFLAGS and LDFLAGS.

2003-04-11  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* kb/kb.h :
	* kb/kb.cpp :

	  - Combined the generate_*() functions into generate_nlp() for
	    efficiency.

	  - Cleanup.

	* common/list.cpp :
	* common/list.h :

	  - Added macro for easy comparisons between two list_items.

	  - Safety check before purge().

	* kb/atom.cpp :
	* kb/consttab.cpp :
	* kb/kb.cpp :
	* kb/sequence.cpp :
	* kb/transtab.cpp :

	  - Now empty lists are stored as NULL pointers to save space.

2003-04-10  Vino Crescini  <jcrescin@cit.uws.edu.au>
	* docs/bnf.txt :
	* docs/langspecs.txt :
	* kb/atom.cpp :
	* kb/atom.h :
	* kb/kb.cpp :
	* kb/kb.h :
	* kb/symtab.cpp :
	* kb/symtab.h :
	* parser/parser.y :
	* parser/scanner.l :
	* samples/atomtest :

	  - Languange no longer accepts the constant atoms true and false.

	* docs/bnf.txt :
	* docs/langspecs.txt :
	* parser/parser.y :
	* parser/scanner.l :
	* samples/chinese_wall :

	  - Changed "is" to "query".

2003-04-09  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* kb/kb.cpp :
	* kb/kb.h :

	  - generate_nlp() now uses the new generate() functions.

	  - Separated the generate() functions. Cleanup work.

	* common/numberlist.cpp :
	* common/numberlist.h :

	  - Not unique anymore.

	  - Added another class: numberlistlist, which is simply a list of
	    lists of numbers.

	* kb/atom.cpp :
	* kb/consttab.cpp :
	* kb/sequence.cpp :
	* kb/transtab.cpp :

	  - Added code to initialise classes.


	* kb/querytab.h :
	* kb/querytab.cpp :

	  - We do not need to store the queries into a table. These
	    files should have been removed when sequence was added.

	* kb/kb.cpp :
	* kb/kb.h :
	* kb/sequence.cpp :
	* kb/sequence.h :
	* parser/parser.y :

	  - Cleanup of sequence.

2003-04-08  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* kb/atom.cpp :
	* kb/atom.h :

	  - Constants are stored as strings now. this is for the sake of
	    simplicity of the api -- init() and get().

	* kb/kb.h :
	* kb/kb.cpp :
	* parser/parser.y :
        * kb/transtab.h :
	* kb/transtab.cpp :
	* kb/consttab.h :
	* kb/consttab.cpp :

	  - Cleanup.

	* kb/atom.h :
	* kb/atom.cpp :

	  - Cleanup to ensure reinitialised atoms will not leak memory.

2003-04-07  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* kb/atom.cpp :
	* kb/atom.h :
	* kb/expression.cpp :
	* kb/expression.h :
	* kb/transtab.cpp :
	* kb/transtab.h :

	  - Added transformation rules in generate_nlp(). And thus, we now
	    begin the lengthy process of cleaning up.

	  - Added replace() functions to replace instances of variables with
	    identifiers.

	* kb/kb.cpp :

	  - Added constraints in generate_nlp().

	* kb/consttab.h :
	* kb/consttab.cpp :

	  - Added get() functions.

	* kb/kb.h :
	* kb/kb.cpp :

	  - Added initial state in generate_nlp().

2003-04-04  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* kb/kb.h :
	* kb/kb.cpp :

	  - decode_atom() is now used to generate atom list.

	  - Added decode_atom().

	  - Cleanup so some of the rules are generated mathematically.

	  - Added inertial and complementary rules.

	  - Added inheritance and transitivity rules.

	  - Now generate_nlp() generates a list of possible atoms.

	* kb/symab.h :
	* kb/symtab.cpp :

	  - Added yet another get() function to give an array of all
	    identifier matching the given type.

	* common/vlad.h :
	* common/list.cpp :

	  - Changed macro VLAD_ADT_MALLOC to include a size parameter.

	* kb/kb.cpp :
	* kb/kb.h :
	* parser/parser.y :

	  - Replaced kb::eval() function with a generate_nlp() stub.

2003-04-03  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* kb/kb.cpp :
	* kb/kb.h :
	* parser/parser.y :

	  - Added partial eval() function.

	* kb/Makefile.in :
	* kb/sequence.h :
	* kb/sequence.cpp :

	  - New class to store transformation sequences that was previously
	    present in the querytab.

	* kb/kb.cpp :
	* kb/kb.h :
	* kb/querytab.cpp :
	* parser/parser.y :

	  - Took out querytab. Apparently, there is no reason to store
	    the queries. They can be evaluated as they are parsed.

	* common/list.cpp :
	* common/list.h :
	* common/numberlist.cpp :
	* common/numberlist.h :
	* common/stringlist.cpp :
	* common/stringlist.h :
	* kb/consttab.cpp :
	* kb/consttab.h :
	* kb/expression.cpp :
	* kb/expression.h :
	* kb/kb.cpp :
	* kb/querytab.cpp :
	* kb/querytab.h :
	* kb/symtab.cpp :
	* kb/transtab.cpp :
	* kb/transtab.h :
	* parser/parser.y :

	  - Took out debug code from list to keep things simple.


2003-04-01  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* kb/kb.h :
	* kb/kb.cpp :

	  - Added a verify_transref() function.

	  - Added add_querytab() function.

	* kb/querytab.h :
	* kb/querytab.cpp :

	  - Added get_*() functions.

	  - Added debug code.

	* kb/transtab.h :
	* kb/transtab.cpp :

	  - Added get() functions.

	* parser/parser.y :

	  - Now adding queries in kb.

	  - Now storing transref/transreflist.

	* kb/querytab.h :
	* kb/querytab.cpp :
	* kb/Makefile.in :

	  - Changed transreflist to add pre-malloc'ed transref.

	  - Added a class structure to hold queries with transformation
	    sequences.

2003-03-31  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* docs/bnf.txt :
	* parser/parser.y :

	  - Since the difference between a ground and a non-ground atom /
	    expression do not exist at parse time, they are now combined
	    together.

	* common/list.cpp :

	  - Fixed get() and del() to make sure that data is retrieved/deleted
	    in the right order. Used to be in reverse order, which was carried
	    over from epilog.

	* kb/kb.cpp :

	  - Now add_transtab() allows precond and varlist to be null.

	  - in verify_atom_member() and verify_atom_subset(), if one ident
	    is a variable, the type checking is skipped.

	* parser/parser.y :

	  - Added kb::add_transtab().

	* common/stringlist.h :
	* common/stringlist.cpp :

	  - Added debug function print().

	* kb/kb.cpp :
	* kb/kb.h :

	  - Fixed add_transtab().

	  - verify_atom() now checks both ground and non-ground atoms.

	* kb/transtab.cpp :

	  - cmp() function will now return true if only the name matches.


2003-03-28  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* kb/Makefile.in :

	  - Fixed dependencies.

	* kb/transtab.h :
	* kb/transtab.cpp :

	  - Added a table for storing transformation declarations.

	* kb/consttab.h :
	* kb/consttab.cpp :

	  - Now stores expressions instead of an integer list.

	* kb/kb.h :
	* kb/kb.cpp :

	  - Fixed stages.

	* kb/kb.h :
	* kb/kb.cpp :
	* parser/parser.y :

	  - Added support for storing constraints.

	* samples/chinese_wall :

	  - Modified to add constraints.

	* kb/atom.cpp :

	  - Dupicates are not allowed.

2003-03-27  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* kb/atom.cpp :
	* kb/atom.h :

	  - Added get_*() functions.

	  - Added init_atom() to effectively copy the contents of a given
	    atom.

	* kb/expression.cpp :
	* kb/expression.h :

	  - Added a get() function.

	* kb/kb.cpp :
	* kb/kb.h :

	  - Added init table and add_inittab() function.

	* kb/symtab.cpp :
	* kb/symtab.h :

	  - Added a function to return the type of an identifier based on
	    the name.

	* parser/parser.y :

	  - Initial state atoms are now stored in kb.

	* kb/atom.cpp :
	* kb/atom.h :

	  - Added negate function.

	  - Added a print function for debugging.

	* kb/expression.cpp :
	* kb/expression.h :

	  - Added a print function for debugging.

	* kb/kb.cpp :
	* kb/kb.h :
	* parser/parser.y :

	  - Fresh start. Took out code to encode and decode atoms to and
	    from an unsigned int.

2003-03-25  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* kb/Makefile.in :
	* kb/kb.h :
	* kb/atom.h :
	* kb/atom.cpp :
	* kb/expression.h :
	* kb/expression.cpp :

	  - Added generic atom and expression classes to be used to
	    store both ground and non-ground expressions.

2003-03-12  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* common/list.h :
	* common/list.cpp :

	  - Added a list cmp() function.

	* kb/Makefile.in :
	* kb/consttab.h :
	* kb/consttab.cpp :

	  - Added a list class for constraints.

	* kb/kb.h :
	* kb/kb.cpp :
	* parser/parser.h :

	  - Some cleanup.

	  - Added consttab.


2003-03-11  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* common/numberlist.cpp :
	* common/stringlist.cpp :

	  - Ensured that dynamic_cast failure will not cause a segfault.

	* kb/kb.cpp :
	* kb/kb.h :

	  - Cleanup.

	  - Separated the encode and decode functions into const, holds,
	    subst and memb.

	* parser/parser.y :

	  - Changed printf() to fprintf(stderr).

	* kb/symtab.cpp :
	* kb/symtab.h :
	* kb/kb.cpp :

	  - Constants true and false are now "built-in" the symbol table.
	    This is to avoid allocating new memory for the constants. Now
	    memory is allocated once for these and only a reference is passed
	    around.

2003-03-10  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* kb/kb.cpp :
	* kb/kb.h :
	* parser/parser.y :

	  - Added initial state list.

	* common/list.cpp :

	  - List debug output will only be displayed when the list is
	    given a name.

	* parser/parser.y :

	  - Added code to store ground expressions.

	  - Duplicate atoms are ignored and only stored once.

2003-03-07  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* kb/kb.cpp :

	  - negate_atom() now works properly.

	  - Fixed decode_atom().

	* parser/parser.y :

	  - Added debug code to print out encoded and decoded ground atoms.

2003-03-06  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* common/vlad.h :

	  - Added true/false string.

	* kb/kb.h :
	* kb/kb.cpp :

	  - Added decode_atom() function

2003-03-05  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* common/Makefile.in :
	* common/numberlist.h :
	* common/numberlist.cpp :

	  - Added a number list class to be used initially as ground
	    expressions.

	* samples/atomtest :

	  - Added negative atoms.

	* kb/kb.h :
	* kb/kb.cpp :
	* parser/parser.y :

	  - Added provisions for negative atoms.

	* common/list.h :
	* common/list.cpp :

	  - Added a tail pointer in the list to allow quick access to the
	    other end. Also, items are now inserted at the end of the tail
	    instead of the head. This allows retrieval of items in the right
	    order.

2003-03-04  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* parser/parser.y :

	  - Removed the add_identifier() function. Less neater but at
	    least we make no exit() calls.

	* kb/kb.cpp :
	* kb/kb.h :
	* parser/parser.y :

	  - Added code to prevent calls the addition of more identifiers
	    in the symbol table after a call to a close() function. This
	    will maintain consistency of the atom ids.

	* common/Makefile.in :
	* common/stringlist.cpp :
	* common/stringlist.h :

	  - Added a simple string list class.

	* kb/Makefile.in :
	* kb/identifier.h :
	* kb/identifier.cpp :

	  - Removed identifier class. Now identifiers will be stored
	    simply as a string.

	* kb/kb.cpp :
	* kb/symtab.cpp :
	* kb/symtab.h :

	  - Took out identlist class and replaced it with stringlist
	    since identifiers are now stored as strings.

	  - Simplified some macro definitions.

2003-03-03  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* kb/kb.cpp :
	* kb/kb.h :
	* parser/parser.y :

	  - Added provisions for constant atoms (true and false);

	* kb/kb.h :
	* kb/kb.cpp :

	  - Added another class to encapsulate all kb operations.

	* common/list.h :
	* common/list.cpp :
	* kb/symtab.h :
	* kb/symtab.cpp :

	  - Added a get() function to return the index of a particular data
	    item.

	  - symtab::length() now returns the length, not error codes.

	* kb/identifier.h :

	  - Added macro for checking basetypes.

	* parser/parser.y :

	  - Now uses kb instead of symtab.

	  - Added debug code for atoms.

	* common/list.cpp :
	* common/list.h :
	* kb/symtab.cpp :
	* kb/symtab.h :

	  - Added provisions for lists to have a name, entirely optional
	    but useful for debugging.

	* kb/symtab.cpp :

	  - Fixed bug that allows identifiers of the same name to be entered.

	* common/list.cpp :
	* common/list.h :
	* kb/symtab.cpp :

	  - Renamed del_i(), del_d(), get_i() and get_d() to del() and get().


2003-03-01  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* kb/identifier.h :
	* kb/symtab.cpp :
	* kb/symtab.h :
	* parser/parser.y :

	  - Modified symtab so that identifiers are stored into 6
	    separate lists (sub, acc, obj, sub grp, etc). This will
	    make it easier to perform searches.

	* kb/Makefile.in :
	* kb/atom.h :
	* kb/atom.cpp :
	* kb/atomlist.h :
	* kb/atomlist.cpp :

	  - Removed unnecessary files.

	* docs/bnf.txt :
	* parser/parser.y :

	  - Renamed ground-atom-exp and comp-atom-exp to ground-atom
	    and comp-atom, respectively, for clarity.

2003-02-27  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* kb/atom.cpp :
	* kb/atom.h :

	  - Took out unnecessary constructors.

	  - Modified the verify() function to allow verification of ground
	    and non-ground atoms.

	  - A NULL ptr passed to cmp() will always cause false to be returned.

	  - Cleaned up cmp() and verify() functions.

	* kb/atomlist.cpp :
	* kb/atomlist.h :

	  - Added a ground indicator to allow or disallow non-ground atoms to
	    be added into the list.

	* kb/identifier.cpp :
	* kb/identifier.h :

	  - Added a macro to unconditionally compare two identifiers.

	  - A NULL ptr passed to cmp() will always cause false to be returned.

2003-02-25  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* kb/atom.cpp :
	* kb/atom.h :
	* kb/atomlist.cpp :
	* kb/atomlist.h :

	  - Improved cmp functions.

	  - holds_atom, member_atom and subset_atom now inherits from the atom
	    class. Much cleaner this way.

	* kb/atom.cpp :
	* kb/atom.h :

	  - Added verify function to ensure integrity.

2003-02-24  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* kb/Makefile.in :
	* kb/atomlist.cpp :
	* kb/atomlist.h :

	  - Added atom list class.

	* kb/atom.cpp :
	* kb/atom.h :

	  - Atom class is now a derived class of list_item. This is to make
	    way for the atomlist class.

	  - Added a cmp() function in atom.

2003-02-18  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* configure :
	* configure.ac :

	  - Fixed CFLAGS/CXXFLAGS = -L..\lib to -L../lib

	* common/vlad.h :

	  - Added a macro for new(nothrow)

	  - Changed new(nothrow) to new(std::nothrow) to keep gcc happy.

	* common/list.cpp :
	* kb/atom.cpp :
	* kb/identifier.cpp :
	* kb/symtab.cpp :
	* main/vlad.cpp :
	* parser/parser.y :
	* parser/scanner.l :

	  - Changed include directives to use stdc++ instead of stdc. Was
	    causing "deprecated" warnings.

	  - Changed to use new macro.

	* main/Makefile.in :

	  - Took out strip --strip-all. Apparently, not all versions of strip
	    support it.

2003-02-12  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* README :
	* configure :
	* configure.ac :
	* main/Makefile.in :

	  - Added --enable-strip configure option to allow final main binary
	    to be stripped with --strip-all after building.

	* kb/atom.cpp :

	  - Sanity checks to ensure that the identifiers given the
	    init() functions are valid.

2003-02-11  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* kb/Makefile.in :
	* kb/atom.h :
	* kb/atom.cpp :

	  - Added atom class.


2003-02-04  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* config.h.in :

	  - Added a template file for config.h to be generated
	    by configure.

	  - At the moment only the debug flag and version string are set.

	* Makefile.in :
	* configure.ac :
	* common/Makefile.in :
	* common/vlad.h :
	* kb/Makefile.in :
	* main/Makefile.in :
	* parser/Makefile.in :

	  - Took out -DDEBUG from makefiles.

	  - Cleared out -L and -I from the makefile. Now these options will
	    be generated by configure and passed into the makefiles via the
	    CFLAGS and LDFLAGS variables.

	  - Added the current directory in the include path.

	* common/list.cpp :
	* kb/identifier.cpp :
	* kb/symtab.cpp :
	* main/vlad.cpp :
	* parser/parser.y :

	  - All cpp files now includes config.h

	  - All vlad header files are included with <...h> instead of
	    "...h".

2003-01-29  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* parser/parser.y :

	  - Identifiers are now stored in symtab.

	* common/vlad.h :
	* common/list.cpp :

	  - VLAD_NOTUNIQUE is a duplicate of VLAD_DUPLICATE (stupid).

	* kb/identifier.cpp :
	* kb/identifier.h :
	* kb/symtab.cpp :
	* kb/symtab.h :

	  - Replaced identifier type and group flag with an integer to
	    represent both.

	  - Added defines and macros for identifier types.

	  - Modified identifier so that the cmp() function will allow
	    the use of wildcards (name == NULL and type == 0 will match
	    anything).

	  - Added another get() function in symtab to allow an array of
	    identifier of a particular type/group to be retrieved.

2003-10-27  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* kb/identifier.cpp :
	* kb/identifier.h :
	* kb/symtab.cpp :

	  - Renamed the enum identifier type names with an _ident
	    suffix to avoid name clashes with access() in unistd.h.

2003-01-26  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* common/list.cpp :

	  - Fixed default constructor.

	  - Added debug code.

	* kb/symtab.cpp :

	  - Fixed default constructor to call the proper base constructor.

2003-01-26  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* sample/chinese_wall :

	  - Added sample program.

2003-01-25  Vino Crescini  <jcrescin@cit.uws.ued.au>

	* common/vlad.h :

	  - Added a new error code for unique-item lists.

	* common/list.cpp :
	* common/list.h :
	* kb/symtab.cpp :

	  - Added a flag to the list to identify whether it should allow
	    identical items to be added or not. Symtab is set to unique.

	  - Added provisions to allow retrieval of identical items from
	    the list. Matching nodes are passed through an array.

	* kb/identifier.cpp :
	* kb/identifier.h :

	  - Added functions to return class attributes.

2003-01-24  Vino Crescini  <jcrescin@cit.uws.ued.au>

	* kb/Makefile.in :
	* kb/symtab.h :
	* kb/symtab.cpp :
	* kb/identifier.h :
	* kb/identifier.cpp :

	  - Added a class for the symbol table. To be used to store identifier
	    declarations. Symtab is derived from the list class and uses
	    the identifier class (which in turn is derived from the abstract
	    base class list_item).

	* Makefile.in :
	* configure.ac :

	  - Some changes to generate a Makefile in the kb directory.

	* common/list.cpp :
	* common/list.h :

	  - Some cleanup.

	  - Added a get function in the list class. Only temporary. This
	    will be replaced by a function that will retrieve an array
	    of items that matches instead of just returning the first match.

	* main/Makefile.in :
	* main/vlad.cpp :

	  - Changes to make the main binary link against the new kb lib.

2003-01-22  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* common/list.cpp :
	* common/list.h :
	* common/vlad.h :

	  - Name cleanup.

	* common/list.cpp :
	* common/list.h :

	  - Added an abstract class to be used as the base class for the
	    list item.

	  - Converted the list class to store descendants of the list_item
	    class instead of void pointers. Note that the destructor and
	    cmp() must be implemented by classes that inherits from this
	    class.

2003-01-13  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* common/Makefile.in :
	* common/vlad.h :
	* common/list.h :
	* common/list.cpp :
	* main/Makefile.in :

	  - Added a simple linked-list structure (void *) for general use.

	* configure.ac :

	  - Took out silly lex/yacc testing. Let it fail in the build
	    process.

	* main/Makefile.in :
	* parser/Makefile.in :

	  - Converted build process to C++. Changed lex/yacc output src
	    to end in .cpp instead of .c.

	* main/vlad.c :

	  - Renamed to vlad.cpp.

2002-12-19  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* Makefile :
	* common/Makefile :
	* parser/Makefile :
	* main/Makefile :

	  - Removed makefiles and replaced them with a corresponding
	    Makefile.in to be generated by the configure script.

	* configure.ac :

	  - Added configure.ac to generate the configure script.

	* README :

	  - Updated README file to describe new build procedure.

2002-12-08  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* parser/parser.y :
	* scanner/scanner.l :

	  - Modified to implement changes described below.

	* docs/bnf.txt :

	  - Fixed bug in query statements that prevented transformations
	    with no paramaters to be queried.

	  - Simplified query rules.

	  - Changed as described below.

	* docs/lanspecs.txt :

	  - Now the if-clause of tranformation definitions are optional.

	  - Dropped the "trans" keyword as it is completely useless.

	* main/Makefile :
	* main/vlad.c :

	  - Added main file (borrowed from epilog).

	* common/Makefile :
	* common/vlad.h :

	  - Added a common header file (borrowed from epilog).

	* Makefile :

	  - Added common and main dirs.

	* parser/parser.y :
	* parser/scannel.l :

	  - Changes to implement the bnf changes below.

	* docs/bnf.txt :

	  - Added constraint statements.

	  - Improvements over old design. First/last parts and other stmt
	    rules no longer needed.

	* ChangeLog :

	  - Changelog started.
